# Generated by Django 5.2.7 on 2025-10-14 07:06

import apps.models.base
import apps.models.managers
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_ckeditor_5.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('logo', models.ImageField(upload_to='logos/images/%Y/%m/%d')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarColor',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=155)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CarTariff',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('daily_price', models.IntegerField()),
                ('one_to_three_day', models.IntegerField()),
                ('three_to_seven_day', models.IntegerField()),
                ('seven_to_half_month', models.IntegerField()),
                ('half_to_one_month', models.IntegerField()),
            ],
            options={
                'verbose_name': 'CarTariff',
                'verbose_name_plural': 'CarTariffs',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=120)),
                ('image', models.ImageField(upload_to='categories/images/%Y/%m/%d')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.TextField()),
                ('answer', models.TextField()),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
            },
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('icon', models.ImageField(upload_to='')),
                ('name', models.CharField(max_length=155)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(max_length=155)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('title', models.CharField(max_length=255)),
                ('description', django_ckeditor_5.fields.CKEditor5Field()),
                ('image', models.ImageField(upload_to='news/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=20, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', apps.models.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Admin',
                'verbose_name_plural': 'Admins',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('apps.user',),
            managers=[
                ('objects', apps.models.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProxy',
            fields=[
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('apps.user',),
            managers=[
                ('objects', apps.models.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminProfile',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('balance', models.BigIntegerField(default=0)),
                ('telegram_id', models.BigIntegerField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=255)),
                ('deposit', models.IntegerField()),
                ('limit_day', models.IntegerField()),
                ('fuel_type', models.CharField(choices=[('gas', 'Gas'), ('electric', 'Electric'), ('hybrid', 'Hybrid')], default='gas', max_length=15)),
                ('description', django_ckeditor_5.fields.CKEditor5Field(blank=True, null=True)),
                ('transmission_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic')], default='automatic', max_length=15)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='apps.brand')),
                ('tariff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='apps.cartariff')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='apps.category')),
                ('features', models.ManyToManyField(related_name='cars', to='apps.feature')),
            ],
            options={
                'verbose_name': 'Car',
                'verbose_name_plural': 'Cars',
            },
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(upload_to='cars/images/%Y/%m/%d')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='apps.car')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LongTermRental',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_price', models.IntegerField()),
                ('is_paid', models.BooleanField(default=False)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='longtermrental', to='apps.car')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'LongTermRental',
                'verbose_name_plural': 'LongTermRentals',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(db_default=apps.models.base.GenRandomUUID(), editable=False, primary_key=True, serialize=False)),
                ('birth_date', models.DateField()),
                ('address', models.TextField()),
                ('region', models.CharField(max_length=255)),
                ('salary', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
